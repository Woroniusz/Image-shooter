name: CI

# =============================
# Github action for pushing to main branch
# ==============================
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  UV_SYSTEM_PYTHON: 1

jobs:
  test:
    name: Test, Mypy & Ruff
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: install uv
        uses: astral-sh/setup-uv@v5


      #============================================
      #             Backend Tests
      #============================================
      - name: Prepare .venv for backend
        working-directory: backend
        run: |
          python -m venv

          source .venv/bin/activate
          python -m ensurepip --upgrade || \
            (curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py && .venv/bin/python get-pip.py)
          pip install --upgrade pip setuptools wheel
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu

      - name: Run uv sync in backend
        working-directory: backend
        run: |
          source .venv/bin/activate
          uv sync --no-build-isolation

      - name: Install backend in editable mode
        working-directory: backend
        run: |
          source .venv/bin/activate
          uv run pip install -e .

      - name: Run tests Backend
        working-directory: backend
        env:
          PYTHONPATH: ${{ github.workspace }}/backend/src
        run: |
            source .venv/bin/activate
            uv run pytest -m "not manual"
            uv run mypy .
            uv run ruff check . 
            uv run pyright


      #============================================
      #             Frontend Tests
      #============================================
      - name: Install the project
        run:  uv sync 
        working-directory: frontend/shooter

      - name: Run tests frontend
        working-directory: frontend/shooter
        run: |
          source .venv/bin/activate
          export DJANG_SETTINGS_MODULE=shooter.settings
          uv run  pytest -m "not manual"
          uv run  mypy .
          uv run  ruff check . 
          uv run  pyright


  docker-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build backend image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker/backend/Dockerfile
        push: false
        tags: test-backend:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Build frontend image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker/frontend/Dockerfile
        push: false
        tags: test-frontend:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
